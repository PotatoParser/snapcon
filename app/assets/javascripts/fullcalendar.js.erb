$( document ).ready(function() {
    let calendarEl = document.getElementById('vert-schedule-full-calendar');
    if (!calendarEl) return; //check that we need a vertical schedule
    let $fullCalendar = $('#fullcalendar');

    let license_key = "<%= Rails.configuration.fullcalendar[:license_key]%>";    
    
    let offset = $fullCalendar.data('tzOffset');    
    let interval = $fullCalendar.data('minInterval');
    let userTz = $fullCalendar.data('userTz');
    let conferenceTz = $fullCalendar.data('conferenceTz');
    let localOffset = (new Date()).getTimezoneOffset()/60;
    let userTzOffset = $fullCalendar.data('userTzOffset') || -localOffset
    let startTime = ($fullCalendar.data('startHour') - (offset - userTzOffset));
    let endTime = ($fullCalendar.data('endHour') - (offset - userTzOffset));
    let startDate = new Date($fullCalendar.data('startDate'));
    let endDate = new Date($fullCalendar.data('endDate')); 
    let newStartDate = moment.tz($fullCalendar.data('startDate'), conferenceTz).tz(userTz)
    let newEndDate = moment.tz($fullCalendar.data('endDate'), conferenceTz).tz(userTz)       
    let event_num_days = (endDate.getTime() - startDate.getTime())/ (1000 * 3600 * 24);
    let width = Math.min(4, event_num_days);
    let localName = userTz || Intl.DateTimeFormat().resolvedOptions().timeZone;

   
    // Program Hours * Minutes / Interval * Min Row Height for an event.
    let contentHeight = Math.max(400, (endTime - startTime) * 60 / interval * 16);
    // UTC JS offsets are "-1 *" of how they're displayed.
    let operator = userTzOffset > 0 ? '+' : '-';
    $('.js-localTimezone').text(`(${localName} UTC ${operator}${Math.abs(userTzOffset)})`);

    var calendar = new FullCalendar.Calendar(calendarEl, {
      schedulerLicenseKey: license_key,
      nowIndicator: true,
      now: $fullCalendar.data('now'),
      contentHeight: contentHeight,
      expandRows: true,
      allDaySlot: false,
      //slotMinTime: startTime + ':00:00',
      //slotMaxTime: endTime + ':00:00',
      // TODO: Set these dynamically.
      slotDuration: '00:15:00',
      slotLabelInterval: '00:15:00',
      slotLabelFormat: {
        hour: 'numeric',
        minute: '2-digit',
        omitZeroMinute: true,
        meridiem: 'short'
      },
      validRange: {
        start: newStartDate.format('YYYY-MM-DD'),
        end: newEndDate.format('YYYY-MM-DD')
      },
      timeZone: userTz,
      initialDate: $fullCalendar.data('day'),
      initialView: 'resourceTimeGridDay',
      resources: $fullCalendar.data('rooms'),
      resourceOrder: 'order, title',
      // TODO: Move this to a XHR.
      events: $fullCalendar.data('events'),
      displayEventEnd: false, // TODO change in list view.
      displayEventTime: false,
      titleFormat: { // will produce something like "Tues, September 18"
        month: 'long',
        day: 'numeric',
        weekday: 'short'
      },
      headerToolbar: {
        left: 'prev,next',
        center: 'title',
        right: 'resourceTimeGridDay,resourceTimeGridFourDay,listDay'
      },
      // TODO: Make this conference Specific?
      views: {
        resourceTimeGridFourDay: {
          type: 'resourceTimeGrid',
          duration: { days: width },
          buttonText: 'overview',
          datesAboveResources: true
        },
        listDay: {
          type: 'listDay',
          displayEventEnd: true,
          displayEventTime: true
        }
      }
    });

    calendar.render();
});
