$( document ).ready(function() {
    let calendarEl = document.getElementById('vert-schedule-full-calendar');
    if (!calendarEl) return; //check that we need a vertical schedule
    let $fullCalendar = $('#fullcalendar');

    let license_key = "<%= Rails.configuration.fullcalendar[:license_key] %>";

    let conferenceOffset = $fullCalendar.data('tzOffset');
    let localOffset = (new Date()).getTimezoneOffset() / 60;
    console.log(conferenceOffset, localOffset,(- conferenceOffset - localOffset))
    let interval = $fullCalendar.data('minInterval');
    let startTime = $fullCalendar.data('startHour') // - conferenceOffset - localOffset;
    let endTime = $fullCalendar.data('endHour') // - conferenceOffset - localOffset;

    // Program Hours * Minutes / Interval * Min Row Height for an event.
    let contentHeight = Math.max(400, (endTime - startTime) * 60 / interval * 16);

    var timeZoneSelectorEl = document.getElementById('time-zone-selector');

    console.log($fullCalendar.data('events'))
    var calendar = new FullCalendar.Calendar(calendarEl, {
      schedulerLicenseKey: license_key,
      nowIndicator: true,
      now: $fullCalendar.data('now'),
      contentHeight: contentHeight,
      expandRows: true,
      allDaySlot: false,
      slotMinTime: startTime + ':00:00',
      slotMaxTime: endTime + ':00:00',
      // TODO: Set these dynamically.
      slotDuration: '00:15:00',
      slotLabelInterval: '00:15:00',
      slotLabelFormat: {
        hour: 'numeric',
        minute: '2-digit',
        omitZeroMinute: true,
        meridiem: 'short',
        timeZoneName: 'short'
      },
      validRange: {
        start: $fullCalendar.data('startDate'),
        end: $fullCalendar.data('endDate')
      },
      timeZone: $fullCalendar.data('timezone'),
      initialDate: $fullCalendar.data('day'),
      initialView: 'resourceTimeGridDay',
      resources: $fullCalendar.data('rooms'),
      resourceOrder: 'order, title',
      // TODO: Move this to a XHR.
      events: $fullCalendar.data('events'),
      displayEventEnd: false,
      displayEventTime: false,
      titleFormat: { // will produce something like "Tues, September 18"
        month: 'long',
        day: 'numeric',
        weekday: 'short'
      },
      headerToolbar: {
        left: 'prev,next',
        center: 'title',
        right: 'resourceTimeGridDay,resourceTimeGridFourDay,listDay'
      },
      // TODO: Make this conference Specific?
      views: {
        resourceTimeGridFourDay: {
          type: 'resourceTimeGrid',
          duration: { days: 4 },
          buttonText: 'overview',
          datesAboveResources: true
        },
        listDay: {
          type: 'listDay',
          displayEventEnd: true,
          displayEventTime: true
        }
      }
    });

    calendar.render();

  // load the list of available timezones, build the <select> options
  // it's highly encouraged to use your own AJAX lib instead of using FullCalendar's internal util
  // FullCalendar.requestJson('GET', 'https://fullcalendar.io/demo-timezones.json', {}, function(timeZones) {
  //   timeZones.forEach(function(timeZone) {
  //     var optionEl;

  //     if (timeZone !== 'UTC') { // UTC is already in the list
  //       optionEl = document.createElement('option');
  //       optionEl.value = timeZone;
  //       optionEl.innerText = timeZone;
  //       timeZoneSelectorEl.appendChild(optionEl);
  //     }
  //   });
  // }, function() {
  //   // failure
  // });

  // when the timezone selector changes, dynamically change the calendar option
  // timeZoneSelectorEl.addEventListener('change', function() {
  //   let startTime = $fullCalendar.data('startHour') - conferenceOffset // - localOffset;
  //   let endTime = $fullCalendar.data('endHour') - conferenceOffset // - localOffset;
  //   calendar.setOption('startTime', startTime);
  //   calendar.setOption('endTime', endTime);
  //   calendar.setOption('timeZone', this.value);
  // });

});
